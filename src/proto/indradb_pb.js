// source: indradb.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.indradb.BulkInsertItem', null, global);
goog.exportSymbol('proto.indradb.BulkInsertItem.ItemCase', null, global);
goog.exportSymbol('proto.indradb.CountQuery', null, global);
goog.exportSymbol('proto.indradb.CreateResponse', null, global);
goog.exportSymbol('proto.indradb.Edge', null, global);
goog.exportSymbol('proto.indradb.EdgeDirection', null, global);
goog.exportSymbol('proto.indradb.EdgeProperties', null, global);
goog.exportSymbol('proto.indradb.EdgeProperty', null, global);
goog.exportSymbol('proto.indradb.EdgePropertyBulkInsertItem', null, global);
goog.exportSymbol('proto.indradb.EdgeWithPropertyPresenceQuery', null, global);
goog.exportSymbol('proto.indradb.EdgeWithPropertyValueQuery', null, global);
goog.exportSymbol('proto.indradb.ExecutePluginRequest', null, global);
goog.exportSymbol('proto.indradb.ExecutePluginResponse', null, global);
goog.exportSymbol('proto.indradb.Identifier', null, global);
goog.exportSymbol('proto.indradb.IncludeQuery', null, global);
goog.exportSymbol('proto.indradb.IndexPropertyRequest', null, global);
goog.exportSymbol('proto.indradb.Json', null, global);
goog.exportSymbol('proto.indradb.NamedProperty', null, global);
goog.exportSymbol('proto.indradb.PipePropertyQuery', null, global);
goog.exportSymbol('proto.indradb.PipeQuery', null, global);
goog.exportSymbol('proto.indradb.PipeWithPropertyPresenceQuery', null, global);
goog.exportSymbol('proto.indradb.PipeWithPropertyValueQuery', null, global);
goog.exportSymbol('proto.indradb.Query', null, global);
goog.exportSymbol('proto.indradb.Query.QueryCase', null, global);
goog.exportSymbol('proto.indradb.QueryOutputEdgeProperties', null, global);
goog.exportSymbol('proto.indradb.QueryOutputEdges', null, global);
goog.exportSymbol('proto.indradb.QueryOutputValue', null, global);
goog.exportSymbol('proto.indradb.QueryOutputValue.ValueCase', null, global);
goog.exportSymbol('proto.indradb.QueryOutputVertexProperties', null, global);
goog.exportSymbol('proto.indradb.QueryOutputVertices', null, global);
goog.exportSymbol('proto.indradb.RangeVertexQuery', null, global);
goog.exportSymbol('proto.indradb.SetPropertiesRequest', null, global);
goog.exportSymbol('proto.indradb.SpecificEdgeQuery', null, global);
goog.exportSymbol('proto.indradb.SpecificVertexQuery', null, global);
goog.exportSymbol('proto.indradb.Uuid', null, global);
goog.exportSymbol('proto.indradb.Vertex', null, global);
goog.exportSymbol('proto.indradb.VertexProperties', null, global);
goog.exportSymbol('proto.indradb.VertexProperty', null, global);
goog.exportSymbol('proto.indradb.VertexPropertyBulkInsertItem', null, global);
goog.exportSymbol('proto.indradb.VertexWithPropertyPresenceQuery', null, global);
goog.exportSymbol('proto.indradb.VertexWithPropertyValueQuery', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.Uuid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.Uuid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.Uuid.displayName = 'proto.indradb.Uuid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.Identifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.Identifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.Identifier.displayName = 'proto.indradb.Identifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.Json = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.Json, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.Json.displayName = 'proto.indradb.Json';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.Edge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.Edge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.Edge.displayName = 'proto.indradb.Edge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.Vertex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.Vertex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.Vertex.displayName = 'proto.indradb.Vertex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.indradb.Query.oneofGroups_);
};
goog.inherits(proto.indradb.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.Query.displayName = 'proto.indradb.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.RangeVertexQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.RangeVertexQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.RangeVertexQuery.displayName = 'proto.indradb.RangeVertexQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.SpecificVertexQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.SpecificVertexQuery.repeatedFields_, null);
};
goog.inherits(proto.indradb.SpecificVertexQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.SpecificVertexQuery.displayName = 'proto.indradb.SpecificVertexQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.VertexWithPropertyPresenceQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.VertexWithPropertyPresenceQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.VertexWithPropertyPresenceQuery.displayName = 'proto.indradb.VertexWithPropertyPresenceQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.VertexWithPropertyValueQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.VertexWithPropertyValueQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.VertexWithPropertyValueQuery.displayName = 'proto.indradb.VertexWithPropertyValueQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.SpecificEdgeQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.SpecificEdgeQuery.repeatedFields_, null);
};
goog.inherits(proto.indradb.SpecificEdgeQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.SpecificEdgeQuery.displayName = 'proto.indradb.SpecificEdgeQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.EdgeWithPropertyPresenceQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.EdgeWithPropertyPresenceQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.EdgeWithPropertyPresenceQuery.displayName = 'proto.indradb.EdgeWithPropertyPresenceQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.EdgeWithPropertyValueQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.EdgeWithPropertyValueQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.EdgeWithPropertyValueQuery.displayName = 'proto.indradb.EdgeWithPropertyValueQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.PipeQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.PipeQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.PipeQuery.displayName = 'proto.indradb.PipeQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.PipePropertyQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.PipePropertyQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.PipePropertyQuery.displayName = 'proto.indradb.PipePropertyQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.PipeWithPropertyPresenceQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.PipeWithPropertyPresenceQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.PipeWithPropertyPresenceQuery.displayName = 'proto.indradb.PipeWithPropertyPresenceQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.PipeWithPropertyValueQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.PipeWithPropertyValueQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.PipeWithPropertyValueQuery.displayName = 'proto.indradb.PipeWithPropertyValueQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.IncludeQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.IncludeQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.IncludeQuery.displayName = 'proto.indradb.IncludeQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.CountQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.CountQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.CountQuery.displayName = 'proto.indradb.CountQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.QueryOutputValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.indradb.QueryOutputValue.oneofGroups_);
};
goog.inherits(proto.indradb.QueryOutputValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.QueryOutputValue.displayName = 'proto.indradb.QueryOutputValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.QueryOutputVertices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.QueryOutputVertices.repeatedFields_, null);
};
goog.inherits(proto.indradb.QueryOutputVertices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.QueryOutputVertices.displayName = 'proto.indradb.QueryOutputVertices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.QueryOutputEdges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.QueryOutputEdges.repeatedFields_, null);
};
goog.inherits(proto.indradb.QueryOutputEdges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.QueryOutputEdges.displayName = 'proto.indradb.QueryOutputEdges';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.QueryOutputVertexProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.QueryOutputVertexProperties.repeatedFields_, null);
};
goog.inherits(proto.indradb.QueryOutputVertexProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.QueryOutputVertexProperties.displayName = 'proto.indradb.QueryOutputVertexProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.QueryOutputEdgeProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.QueryOutputEdgeProperties.repeatedFields_, null);
};
goog.inherits(proto.indradb.QueryOutputEdgeProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.QueryOutputEdgeProperties.displayName = 'proto.indradb.QueryOutputEdgeProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.NamedProperty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.NamedProperty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.NamedProperty.displayName = 'proto.indradb.NamedProperty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.VertexProperty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.VertexProperty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.VertexProperty.displayName = 'proto.indradb.VertexProperty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.VertexProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.VertexProperties.repeatedFields_, null);
};
goog.inherits(proto.indradb.VertexProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.VertexProperties.displayName = 'proto.indradb.VertexProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.EdgeProperty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.EdgeProperty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.EdgeProperty.displayName = 'proto.indradb.EdgeProperty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.EdgeProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.indradb.EdgeProperties.repeatedFields_, null);
};
goog.inherits(proto.indradb.EdgeProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.EdgeProperties.displayName = 'proto.indradb.EdgeProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.BulkInsertItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.indradb.BulkInsertItem.oneofGroups_);
};
goog.inherits(proto.indradb.BulkInsertItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.BulkInsertItem.displayName = 'proto.indradb.BulkInsertItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.VertexPropertyBulkInsertItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.VertexPropertyBulkInsertItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.VertexPropertyBulkInsertItem.displayName = 'proto.indradb.VertexPropertyBulkInsertItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.EdgePropertyBulkInsertItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.EdgePropertyBulkInsertItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.EdgePropertyBulkInsertItem.displayName = 'proto.indradb.EdgePropertyBulkInsertItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.IndexPropertyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.IndexPropertyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.IndexPropertyRequest.displayName = 'proto.indradb.IndexPropertyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.SetPropertiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.SetPropertiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.SetPropertiesRequest.displayName = 'proto.indradb.SetPropertiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.CreateResponse.displayName = 'proto.indradb.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.ExecutePluginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.ExecutePluginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.ExecutePluginRequest.displayName = 'proto.indradb.ExecutePluginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.indradb.ExecutePluginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.indradb.ExecutePluginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.indradb.ExecutePluginResponse.displayName = 'proto.indradb.ExecutePluginResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.Uuid.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.Uuid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.Uuid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Uuid.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.Uuid}
 */
proto.indradb.Uuid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.Uuid;
  return proto.indradb.Uuid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.Uuid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.Uuid}
 */
proto.indradb.Uuid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.Uuid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.Uuid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.Uuid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Uuid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes value = 1;
 * @return {!(string|Uint8Array)}
 */
proto.indradb.Uuid.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes value = 1;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.indradb.Uuid.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.indradb.Uuid.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.indradb.Uuid} returns this
 */
proto.indradb.Uuid.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.Identifier.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.Identifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.Identifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Identifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.Identifier}
 */
proto.indradb.Identifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.Identifier;
  return proto.indradb.Identifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.Identifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.Identifier}
 */
proto.indradb.Identifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.Identifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.Identifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.Identifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Identifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.indradb.Identifier.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.indradb.Identifier} returns this
 */
proto.indradb.Identifier.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.Json.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.Json.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.Json} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Json.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.Json}
 */
proto.indradb.Json.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.Json;
  return proto.indradb.Json.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.Json} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.Json}
 */
proto.indradb.Json.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.Json.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.Json.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.Json} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Json.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.indradb.Json.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.indradb.Json} returns this
 */
proto.indradb.Json.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.Edge.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.Edge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.Edge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Edge.toObject = function(includeInstance, msg) {
  var f, obj = {
    outboundId: (f = msg.getOutboundId()) && proto.indradb.Uuid.toObject(includeInstance, f),
    t: (f = msg.getT()) && proto.indradb.Identifier.toObject(includeInstance, f),
    inboundId: (f = msg.getInboundId()) && proto.indradb.Uuid.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.Edge}
 */
proto.indradb.Edge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.Edge;
  return proto.indradb.Edge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.Edge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.Edge}
 */
proto.indradb.Edge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Uuid;
      reader.readMessage(value,proto.indradb.Uuid.deserializeBinaryFromReader);
      msg.setOutboundId(value);
      break;
    case 2:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setT(value);
      break;
    case 3:
      var value = new proto.indradb.Uuid;
      reader.readMessage(value,proto.indradb.Uuid.deserializeBinaryFromReader);
      msg.setInboundId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.Edge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.Edge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.Edge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Edge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutboundId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getT();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getInboundId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.Uuid.serializeBinaryToWriter
    );
  }
};


/**
 * optional Uuid outbound_id = 1;
 * @return {?proto.indradb.Uuid}
 */
proto.indradb.Edge.prototype.getOutboundId = function() {
  return /** @type{?proto.indradb.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Uuid, 1));
};


/**
 * @param {?proto.indradb.Uuid|undefined} value
 * @return {!proto.indradb.Edge} returns this
*/
proto.indradb.Edge.prototype.setOutboundId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Edge} returns this
 */
proto.indradb.Edge.prototype.clearOutboundId = function() {
  return this.setOutboundId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Edge.prototype.hasOutboundId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier t = 2;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.Edge.prototype.getT = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 2));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.Edge} returns this
*/
proto.indradb.Edge.prototype.setT = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Edge} returns this
 */
proto.indradb.Edge.prototype.clearT = function() {
  return this.setT(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Edge.prototype.hasT = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Uuid inbound_id = 3;
 * @return {?proto.indradb.Uuid}
 */
proto.indradb.Edge.prototype.getInboundId = function() {
  return /** @type{?proto.indradb.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Uuid, 3));
};


/**
 * @param {?proto.indradb.Uuid|undefined} value
 * @return {!proto.indradb.Edge} returns this
*/
proto.indradb.Edge.prototype.setInboundId = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Edge} returns this
 */
proto.indradb.Edge.prototype.clearInboundId = function() {
  return this.setInboundId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Edge.prototype.hasInboundId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.Vertex.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.Vertex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.Vertex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Vertex.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.indradb.Uuid.toObject(includeInstance, f),
    t: (f = msg.getT()) && proto.indradb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.Vertex}
 */
proto.indradb.Vertex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.Vertex;
  return proto.indradb.Vertex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.Vertex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.Vertex}
 */
proto.indradb.Vertex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Uuid;
      reader.readMessage(value,proto.indradb.Uuid.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setT(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.Vertex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.Vertex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.Vertex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Vertex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getT();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional Uuid id = 1;
 * @return {?proto.indradb.Uuid}
 */
proto.indradb.Vertex.prototype.getId = function() {
  return /** @type{?proto.indradb.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Uuid, 1));
};


/**
 * @param {?proto.indradb.Uuid|undefined} value
 * @return {!proto.indradb.Vertex} returns this
*/
proto.indradb.Vertex.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Vertex} returns this
 */
proto.indradb.Vertex.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Vertex.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier t = 2;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.Vertex.prototype.getT = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 2));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.Vertex} returns this
*/
proto.indradb.Vertex.prototype.setT = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Vertex} returns this
 */
proto.indradb.Vertex.prototype.clearT = function() {
  return this.setT(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Vertex.prototype.hasT = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.indradb.Query.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]];

/**
 * @enum {number}
 */
proto.indradb.Query.QueryCase = {
  QUERY_NOT_SET: 0,
  ALL_VERTEX: 1,
  RANGE_VERTEX: 2,
  SPECIFIC_VERTEX: 3,
  VERTEX_WITH_PROPERTY_PRESENCE: 4,
  VERTEX_WITH_PROPERTY_VALUE: 5,
  ALL_EDGE: 6,
  SPECIFIC_EDGE: 7,
  EDGE_WITH_PROPERTY_PRESENCE: 8,
  EDGE_WITH_PROPERTY_VALUE: 9,
  PIPE: 10,
  PIPE_PROPERTY: 11,
  PIPE_WITH_PROPERTY_PRESENCE: 12,
  PIPE_WITH_PROPERTY_VALUE: 13,
  INCLUDE: 14,
  COUNT: 15
};

/**
 * @return {proto.indradb.Query.QueryCase}
 */
proto.indradb.Query.prototype.getQueryCase = function() {
  return /** @type {proto.indradb.Query.QueryCase} */(jspb.Message.computeOneofCase(this, proto.indradb.Query.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    allVertex: (f = msg.getAllVertex()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    rangeVertex: (f = msg.getRangeVertex()) && proto.indradb.RangeVertexQuery.toObject(includeInstance, f),
    specificVertex: (f = msg.getSpecificVertex()) && proto.indradb.SpecificVertexQuery.toObject(includeInstance, f),
    vertexWithPropertyPresence: (f = msg.getVertexWithPropertyPresence()) && proto.indradb.VertexWithPropertyPresenceQuery.toObject(includeInstance, f),
    vertexWithPropertyValue: (f = msg.getVertexWithPropertyValue()) && proto.indradb.VertexWithPropertyValueQuery.toObject(includeInstance, f),
    allEdge: (f = msg.getAllEdge()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    specificEdge: (f = msg.getSpecificEdge()) && proto.indradb.SpecificEdgeQuery.toObject(includeInstance, f),
    edgeWithPropertyPresence: (f = msg.getEdgeWithPropertyPresence()) && proto.indradb.EdgeWithPropertyPresenceQuery.toObject(includeInstance, f),
    edgeWithPropertyValue: (f = msg.getEdgeWithPropertyValue()) && proto.indradb.EdgeWithPropertyValueQuery.toObject(includeInstance, f),
    pipe: (f = msg.getPipe()) && proto.indradb.PipeQuery.toObject(includeInstance, f),
    pipeProperty: (f = msg.getPipeProperty()) && proto.indradb.PipePropertyQuery.toObject(includeInstance, f),
    pipeWithPropertyPresence: (f = msg.getPipeWithPropertyPresence()) && proto.indradb.PipeWithPropertyPresenceQuery.toObject(includeInstance, f),
    pipeWithPropertyValue: (f = msg.getPipeWithPropertyValue()) && proto.indradb.PipeWithPropertyValueQuery.toObject(includeInstance, f),
    include: (f = msg.getInclude()) && proto.indradb.IncludeQuery.toObject(includeInstance, f),
    count: (f = msg.getCount()) && proto.indradb.CountQuery.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.Query}
 */
proto.indradb.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.Query;
  return proto.indradb.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.Query}
 */
proto.indradb.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setAllVertex(value);
      break;
    case 2:
      var value = new proto.indradb.RangeVertexQuery;
      reader.readMessage(value,proto.indradb.RangeVertexQuery.deserializeBinaryFromReader);
      msg.setRangeVertex(value);
      break;
    case 3:
      var value = new proto.indradb.SpecificVertexQuery;
      reader.readMessage(value,proto.indradb.SpecificVertexQuery.deserializeBinaryFromReader);
      msg.setSpecificVertex(value);
      break;
    case 4:
      var value = new proto.indradb.VertexWithPropertyPresenceQuery;
      reader.readMessage(value,proto.indradb.VertexWithPropertyPresenceQuery.deserializeBinaryFromReader);
      msg.setVertexWithPropertyPresence(value);
      break;
    case 5:
      var value = new proto.indradb.VertexWithPropertyValueQuery;
      reader.readMessage(value,proto.indradb.VertexWithPropertyValueQuery.deserializeBinaryFromReader);
      msg.setVertexWithPropertyValue(value);
      break;
    case 6:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setAllEdge(value);
      break;
    case 7:
      var value = new proto.indradb.SpecificEdgeQuery;
      reader.readMessage(value,proto.indradb.SpecificEdgeQuery.deserializeBinaryFromReader);
      msg.setSpecificEdge(value);
      break;
    case 8:
      var value = new proto.indradb.EdgeWithPropertyPresenceQuery;
      reader.readMessage(value,proto.indradb.EdgeWithPropertyPresenceQuery.deserializeBinaryFromReader);
      msg.setEdgeWithPropertyPresence(value);
      break;
    case 9:
      var value = new proto.indradb.EdgeWithPropertyValueQuery;
      reader.readMessage(value,proto.indradb.EdgeWithPropertyValueQuery.deserializeBinaryFromReader);
      msg.setEdgeWithPropertyValue(value);
      break;
    case 10:
      var value = new proto.indradb.PipeQuery;
      reader.readMessage(value,proto.indradb.PipeQuery.deserializeBinaryFromReader);
      msg.setPipe(value);
      break;
    case 11:
      var value = new proto.indradb.PipePropertyQuery;
      reader.readMessage(value,proto.indradb.PipePropertyQuery.deserializeBinaryFromReader);
      msg.setPipeProperty(value);
      break;
    case 12:
      var value = new proto.indradb.PipeWithPropertyPresenceQuery;
      reader.readMessage(value,proto.indradb.PipeWithPropertyPresenceQuery.deserializeBinaryFromReader);
      msg.setPipeWithPropertyPresence(value);
      break;
    case 13:
      var value = new proto.indradb.PipeWithPropertyValueQuery;
      reader.readMessage(value,proto.indradb.PipeWithPropertyValueQuery.deserializeBinaryFromReader);
      msg.setPipeWithPropertyValue(value);
      break;
    case 14:
      var value = new proto.indradb.IncludeQuery;
      reader.readMessage(value,proto.indradb.IncludeQuery.deserializeBinaryFromReader);
      msg.setInclude(value);
      break;
    case 15:
      var value = new proto.indradb.CountQuery;
      reader.readMessage(value,proto.indradb.CountQuery.deserializeBinaryFromReader);
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllVertex();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getRangeVertex();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.RangeVertexQuery.serializeBinaryToWriter
    );
  }
  f = message.getSpecificVertex();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.SpecificVertexQuery.serializeBinaryToWriter
    );
  }
  f = message.getVertexWithPropertyPresence();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.indradb.VertexWithPropertyPresenceQuery.serializeBinaryToWriter
    );
  }
  f = message.getVertexWithPropertyValue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.indradb.VertexWithPropertyValueQuery.serializeBinaryToWriter
    );
  }
  f = message.getAllEdge();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getSpecificEdge();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.indradb.SpecificEdgeQuery.serializeBinaryToWriter
    );
  }
  f = message.getEdgeWithPropertyPresence();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.indradb.EdgeWithPropertyPresenceQuery.serializeBinaryToWriter
    );
  }
  f = message.getEdgeWithPropertyValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.indradb.EdgeWithPropertyValueQuery.serializeBinaryToWriter
    );
  }
  f = message.getPipe();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.indradb.PipeQuery.serializeBinaryToWriter
    );
  }
  f = message.getPipeProperty();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.indradb.PipePropertyQuery.serializeBinaryToWriter
    );
  }
  f = message.getPipeWithPropertyPresence();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.indradb.PipeWithPropertyPresenceQuery.serializeBinaryToWriter
    );
  }
  f = message.getPipeWithPropertyValue();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.indradb.PipeWithPropertyValueQuery.serializeBinaryToWriter
    );
  }
  f = message.getInclude();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.indradb.IncludeQuery.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.indradb.CountQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Empty all_vertex = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.indradb.Query.prototype.getAllVertex = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setAllVertex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearAllVertex = function() {
  return this.setAllVertex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasAllVertex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RangeVertexQuery range_vertex = 2;
 * @return {?proto.indradb.RangeVertexQuery}
 */
proto.indradb.Query.prototype.getRangeVertex = function() {
  return /** @type{?proto.indradb.RangeVertexQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.RangeVertexQuery, 2));
};


/**
 * @param {?proto.indradb.RangeVertexQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setRangeVertex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearRangeVertex = function() {
  return this.setRangeVertex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasRangeVertex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SpecificVertexQuery specific_vertex = 3;
 * @return {?proto.indradb.SpecificVertexQuery}
 */
proto.indradb.Query.prototype.getSpecificVertex = function() {
  return /** @type{?proto.indradb.SpecificVertexQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.SpecificVertexQuery, 3));
};


/**
 * @param {?proto.indradb.SpecificVertexQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setSpecificVertex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearSpecificVertex = function() {
  return this.setSpecificVertex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasSpecificVertex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional VertexWithPropertyPresenceQuery vertex_with_property_presence = 4;
 * @return {?proto.indradb.VertexWithPropertyPresenceQuery}
 */
proto.indradb.Query.prototype.getVertexWithPropertyPresence = function() {
  return /** @type{?proto.indradb.VertexWithPropertyPresenceQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.VertexWithPropertyPresenceQuery, 4));
};


/**
 * @param {?proto.indradb.VertexWithPropertyPresenceQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setVertexWithPropertyPresence = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearVertexWithPropertyPresence = function() {
  return this.setVertexWithPropertyPresence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasVertexWithPropertyPresence = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional VertexWithPropertyValueQuery vertex_with_property_value = 5;
 * @return {?proto.indradb.VertexWithPropertyValueQuery}
 */
proto.indradb.Query.prototype.getVertexWithPropertyValue = function() {
  return /** @type{?proto.indradb.VertexWithPropertyValueQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.VertexWithPropertyValueQuery, 5));
};


/**
 * @param {?proto.indradb.VertexWithPropertyValueQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setVertexWithPropertyValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearVertexWithPropertyValue = function() {
  return this.setVertexWithPropertyValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasVertexWithPropertyValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Empty all_edge = 6;
 * @return {?proto.google.protobuf.Empty}
 */
proto.indradb.Query.prototype.getAllEdge = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 6));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setAllEdge = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearAllEdge = function() {
  return this.setAllEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasAllEdge = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SpecificEdgeQuery specific_edge = 7;
 * @return {?proto.indradb.SpecificEdgeQuery}
 */
proto.indradb.Query.prototype.getSpecificEdge = function() {
  return /** @type{?proto.indradb.SpecificEdgeQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.SpecificEdgeQuery, 7));
};


/**
 * @param {?proto.indradb.SpecificEdgeQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setSpecificEdge = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearSpecificEdge = function() {
  return this.setSpecificEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasSpecificEdge = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EdgeWithPropertyPresenceQuery edge_with_property_presence = 8;
 * @return {?proto.indradb.EdgeWithPropertyPresenceQuery}
 */
proto.indradb.Query.prototype.getEdgeWithPropertyPresence = function() {
  return /** @type{?proto.indradb.EdgeWithPropertyPresenceQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.EdgeWithPropertyPresenceQuery, 8));
};


/**
 * @param {?proto.indradb.EdgeWithPropertyPresenceQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setEdgeWithPropertyPresence = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearEdgeWithPropertyPresence = function() {
  return this.setEdgeWithPropertyPresence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasEdgeWithPropertyPresence = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional EdgeWithPropertyValueQuery edge_with_property_value = 9;
 * @return {?proto.indradb.EdgeWithPropertyValueQuery}
 */
proto.indradb.Query.prototype.getEdgeWithPropertyValue = function() {
  return /** @type{?proto.indradb.EdgeWithPropertyValueQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.EdgeWithPropertyValueQuery, 9));
};


/**
 * @param {?proto.indradb.EdgeWithPropertyValueQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setEdgeWithPropertyValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearEdgeWithPropertyValue = function() {
  return this.setEdgeWithPropertyValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasEdgeWithPropertyValue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PipeQuery pipe = 10;
 * @return {?proto.indradb.PipeQuery}
 */
proto.indradb.Query.prototype.getPipe = function() {
  return /** @type{?proto.indradb.PipeQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.PipeQuery, 10));
};


/**
 * @param {?proto.indradb.PipeQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setPipe = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearPipe = function() {
  return this.setPipe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasPipe = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PipePropertyQuery pipe_property = 11;
 * @return {?proto.indradb.PipePropertyQuery}
 */
proto.indradb.Query.prototype.getPipeProperty = function() {
  return /** @type{?proto.indradb.PipePropertyQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.PipePropertyQuery, 11));
};


/**
 * @param {?proto.indradb.PipePropertyQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setPipeProperty = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearPipeProperty = function() {
  return this.setPipeProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasPipeProperty = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PipeWithPropertyPresenceQuery pipe_with_property_presence = 12;
 * @return {?proto.indradb.PipeWithPropertyPresenceQuery}
 */
proto.indradb.Query.prototype.getPipeWithPropertyPresence = function() {
  return /** @type{?proto.indradb.PipeWithPropertyPresenceQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.PipeWithPropertyPresenceQuery, 12));
};


/**
 * @param {?proto.indradb.PipeWithPropertyPresenceQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setPipeWithPropertyPresence = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearPipeWithPropertyPresence = function() {
  return this.setPipeWithPropertyPresence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasPipeWithPropertyPresence = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PipeWithPropertyValueQuery pipe_with_property_value = 13;
 * @return {?proto.indradb.PipeWithPropertyValueQuery}
 */
proto.indradb.Query.prototype.getPipeWithPropertyValue = function() {
  return /** @type{?proto.indradb.PipeWithPropertyValueQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.PipeWithPropertyValueQuery, 13));
};


/**
 * @param {?proto.indradb.PipeWithPropertyValueQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setPipeWithPropertyValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearPipeWithPropertyValue = function() {
  return this.setPipeWithPropertyValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasPipeWithPropertyValue = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional IncludeQuery include = 14;
 * @return {?proto.indradb.IncludeQuery}
 */
proto.indradb.Query.prototype.getInclude = function() {
  return /** @type{?proto.indradb.IncludeQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.IncludeQuery, 14));
};


/**
 * @param {?proto.indradb.IncludeQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setInclude = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearInclude = function() {
  return this.setInclude(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasInclude = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional CountQuery count = 15;
 * @return {?proto.indradb.CountQuery}
 */
proto.indradb.Query.prototype.getCount = function() {
  return /** @type{?proto.indradb.CountQuery} */ (
    jspb.Message.getWrapperField(this, proto.indradb.CountQuery, 15));
};


/**
 * @param {?proto.indradb.CountQuery|undefined} value
 * @return {!proto.indradb.Query} returns this
*/
proto.indradb.Query.prototype.setCount = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.indradb.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.Query} returns this
 */
proto.indradb.Query.prototype.clearCount = function() {
  return this.setCount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.Query.prototype.hasCount = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.RangeVertexQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.RangeVertexQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.RangeVertexQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.RangeVertexQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    t: (f = msg.getT()) && proto.indradb.Identifier.toObject(includeInstance, f),
    startId: (f = msg.getStartId()) && proto.indradb.Uuid.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.RangeVertexQuery}
 */
proto.indradb.RangeVertexQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.RangeVertexQuery;
  return proto.indradb.RangeVertexQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.RangeVertexQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.RangeVertexQuery}
 */
proto.indradb.RangeVertexQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 2:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setT(value);
      break;
    case 3:
      var value = new proto.indradb.Uuid;
      reader.readMessage(value,proto.indradb.Uuid.deserializeBinaryFromReader);
      msg.setStartId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.RangeVertexQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.RangeVertexQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.RangeVertexQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.RangeVertexQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getT();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getStartId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.Uuid.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 limit = 1;
 * @return {number}
 */
proto.indradb.RangeVertexQuery.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.indradb.RangeVertexQuery} returns this
 */
proto.indradb.RangeVertexQuery.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Identifier t = 2;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.RangeVertexQuery.prototype.getT = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 2));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.RangeVertexQuery} returns this
*/
proto.indradb.RangeVertexQuery.prototype.setT = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.RangeVertexQuery} returns this
 */
proto.indradb.RangeVertexQuery.prototype.clearT = function() {
  return this.setT(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.RangeVertexQuery.prototype.hasT = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Uuid start_id = 3;
 * @return {?proto.indradb.Uuid}
 */
proto.indradb.RangeVertexQuery.prototype.getStartId = function() {
  return /** @type{?proto.indradb.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Uuid, 3));
};


/**
 * @param {?proto.indradb.Uuid|undefined} value
 * @return {!proto.indradb.RangeVertexQuery} returns this
*/
proto.indradb.RangeVertexQuery.prototype.setStartId = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.RangeVertexQuery} returns this
 */
proto.indradb.RangeVertexQuery.prototype.clearStartId = function() {
  return this.setStartId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.RangeVertexQuery.prototype.hasStartId = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.SpecificVertexQuery.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.SpecificVertexQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.SpecificVertexQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.SpecificVertexQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.SpecificVertexQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: jspb.Message.toObjectList(msg.getIdsList(),
    proto.indradb.Uuid.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.SpecificVertexQuery}
 */
proto.indradb.SpecificVertexQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.SpecificVertexQuery;
  return proto.indradb.SpecificVertexQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.SpecificVertexQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.SpecificVertexQuery}
 */
proto.indradb.SpecificVertexQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Uuid;
      reader.readMessage(value,proto.indradb.Uuid.deserializeBinaryFromReader);
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.SpecificVertexQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.SpecificVertexQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.SpecificVertexQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.SpecificVertexQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.indradb.Uuid.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Uuid ids = 1;
 * @return {!Array<!proto.indradb.Uuid>}
 */
proto.indradb.SpecificVertexQuery.prototype.getIdsList = function() {
  return /** @type{!Array<!proto.indradb.Uuid>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.Uuid, 1));
};


/**
 * @param {!Array<!proto.indradb.Uuid>} value
 * @return {!proto.indradb.SpecificVertexQuery} returns this
*/
proto.indradb.SpecificVertexQuery.prototype.setIdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.indradb.Uuid=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.Uuid}
 */
proto.indradb.SpecificVertexQuery.prototype.addIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.indradb.Uuid, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.SpecificVertexQuery} returns this
 */
proto.indradb.SpecificVertexQuery.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.VertexWithPropertyPresenceQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.VertexWithPropertyPresenceQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.VertexWithPropertyPresenceQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexWithPropertyPresenceQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.VertexWithPropertyPresenceQuery}
 */
proto.indradb.VertexWithPropertyPresenceQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.VertexWithPropertyPresenceQuery;
  return proto.indradb.VertexWithPropertyPresenceQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.VertexWithPropertyPresenceQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.VertexWithPropertyPresenceQuery}
 */
proto.indradb.VertexWithPropertyPresenceQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.VertexWithPropertyPresenceQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.VertexWithPropertyPresenceQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.VertexWithPropertyPresenceQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexWithPropertyPresenceQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier name = 1;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.VertexWithPropertyPresenceQuery.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 1));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.VertexWithPropertyPresenceQuery} returns this
*/
proto.indradb.VertexWithPropertyPresenceQuery.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexWithPropertyPresenceQuery} returns this
 */
proto.indradb.VertexWithPropertyPresenceQuery.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexWithPropertyPresenceQuery.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.VertexWithPropertyValueQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.VertexWithPropertyValueQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexWithPropertyValueQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.VertexWithPropertyValueQuery}
 */
proto.indradb.VertexWithPropertyValueQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.VertexWithPropertyValueQuery;
  return proto.indradb.VertexWithPropertyValueQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.VertexWithPropertyValueQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.VertexWithPropertyValueQuery}
 */
proto.indradb.VertexWithPropertyValueQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.VertexWithPropertyValueQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.VertexWithPropertyValueQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexWithPropertyValueQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier name = 1;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 1));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.VertexWithPropertyValueQuery} returns this
*/
proto.indradb.VertexWithPropertyValueQuery.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexWithPropertyValueQuery} returns this
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Json value = 2;
 * @return {?proto.indradb.Json}
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 2));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.VertexWithPropertyValueQuery} returns this
*/
proto.indradb.VertexWithPropertyValueQuery.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexWithPropertyValueQuery} returns this
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexWithPropertyValueQuery.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.SpecificEdgeQuery.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.SpecificEdgeQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.SpecificEdgeQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.SpecificEdgeQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.SpecificEdgeQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.indradb.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.SpecificEdgeQuery}
 */
proto.indradb.SpecificEdgeQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.SpecificEdgeQuery;
  return proto.indradb.SpecificEdgeQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.SpecificEdgeQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.SpecificEdgeQuery}
 */
proto.indradb.SpecificEdgeQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Edge;
      reader.readMessage(value,proto.indradb.Edge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.SpecificEdgeQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.SpecificEdgeQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.SpecificEdgeQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.SpecificEdgeQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.indradb.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edge edges = 1;
 * @return {!Array<!proto.indradb.Edge>}
 */
proto.indradb.SpecificEdgeQuery.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.indradb.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.Edge, 1));
};


/**
 * @param {!Array<!proto.indradb.Edge>} value
 * @return {!proto.indradb.SpecificEdgeQuery} returns this
*/
proto.indradb.SpecificEdgeQuery.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.indradb.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.Edge}
 */
proto.indradb.SpecificEdgeQuery.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.indradb.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.SpecificEdgeQuery} returns this
 */
proto.indradb.SpecificEdgeQuery.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.EdgeWithPropertyPresenceQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.EdgeWithPropertyPresenceQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.EdgeWithPropertyPresenceQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeWithPropertyPresenceQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.EdgeWithPropertyPresenceQuery}
 */
proto.indradb.EdgeWithPropertyPresenceQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.EdgeWithPropertyPresenceQuery;
  return proto.indradb.EdgeWithPropertyPresenceQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.EdgeWithPropertyPresenceQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.EdgeWithPropertyPresenceQuery}
 */
proto.indradb.EdgeWithPropertyPresenceQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.EdgeWithPropertyPresenceQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.EdgeWithPropertyPresenceQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.EdgeWithPropertyPresenceQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeWithPropertyPresenceQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier name = 1;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.EdgeWithPropertyPresenceQuery.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 1));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.EdgeWithPropertyPresenceQuery} returns this
*/
proto.indradb.EdgeWithPropertyPresenceQuery.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgeWithPropertyPresenceQuery} returns this
 */
proto.indradb.EdgeWithPropertyPresenceQuery.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgeWithPropertyPresenceQuery.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.EdgeWithPropertyValueQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.EdgeWithPropertyValueQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeWithPropertyValueQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.EdgeWithPropertyValueQuery}
 */
proto.indradb.EdgeWithPropertyValueQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.EdgeWithPropertyValueQuery;
  return proto.indradb.EdgeWithPropertyValueQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.EdgeWithPropertyValueQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.EdgeWithPropertyValueQuery}
 */
proto.indradb.EdgeWithPropertyValueQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.EdgeWithPropertyValueQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.EdgeWithPropertyValueQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeWithPropertyValueQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier name = 1;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 1));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.EdgeWithPropertyValueQuery} returns this
*/
proto.indradb.EdgeWithPropertyValueQuery.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgeWithPropertyValueQuery} returns this
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Json value = 2;
 * @return {?proto.indradb.Json}
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 2));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.EdgeWithPropertyValueQuery} returns this
*/
proto.indradb.EdgeWithPropertyValueQuery.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgeWithPropertyValueQuery} returns this
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgeWithPropertyValueQuery.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.PipeQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.PipeQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.PipeQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipeQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: (f = msg.getInner()) && proto.indradb.Query.toObject(includeInstance, f),
    direction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    t: (f = msg.getT()) && proto.indradb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.PipeQuery}
 */
proto.indradb.PipeQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.PipeQuery;
  return proto.indradb.PipeQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.PipeQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.PipeQuery}
 */
proto.indradb.PipeQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Query;
      reader.readMessage(value,proto.indradb.Query.deserializeBinaryFromReader);
      msg.setInner(value);
      break;
    case 2:
      var value = /** @type {!proto.indradb.EdgeDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 4:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setT(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.PipeQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.PipeQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.PipeQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipeQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Query.serializeBinaryToWriter
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getT();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional Query inner = 1;
 * @return {?proto.indradb.Query}
 */
proto.indradb.PipeQuery.prototype.getInner = function() {
  return /** @type{?proto.indradb.Query} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Query, 1));
};


/**
 * @param {?proto.indradb.Query|undefined} value
 * @return {!proto.indradb.PipeQuery} returns this
*/
proto.indradb.PipeQuery.prototype.setInner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipeQuery} returns this
 */
proto.indradb.PipeQuery.prototype.clearInner = function() {
  return this.setInner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipeQuery.prototype.hasInner = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EdgeDirection direction = 2;
 * @return {!proto.indradb.EdgeDirection}
 */
proto.indradb.PipeQuery.prototype.getDirection = function() {
  return /** @type {!proto.indradb.EdgeDirection} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.indradb.EdgeDirection} value
 * @return {!proto.indradb.PipeQuery} returns this
 */
proto.indradb.PipeQuery.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint32 limit = 3;
 * @return {number}
 */
proto.indradb.PipeQuery.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.indradb.PipeQuery} returns this
 */
proto.indradb.PipeQuery.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Identifier t = 4;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.PipeQuery.prototype.getT = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 4));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.PipeQuery} returns this
*/
proto.indradb.PipeQuery.prototype.setT = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipeQuery} returns this
 */
proto.indradb.PipeQuery.prototype.clearT = function() {
  return this.setT(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipeQuery.prototype.hasT = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.PipePropertyQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.PipePropertyQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.PipePropertyQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipePropertyQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: (f = msg.getInner()) && proto.indradb.Query.toObject(includeInstance, f),
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.PipePropertyQuery}
 */
proto.indradb.PipePropertyQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.PipePropertyQuery;
  return proto.indradb.PipePropertyQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.PipePropertyQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.PipePropertyQuery}
 */
proto.indradb.PipePropertyQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Query;
      reader.readMessage(value,proto.indradb.Query.deserializeBinaryFromReader);
      msg.setInner(value);
      break;
    case 2:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.PipePropertyQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.PipePropertyQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.PipePropertyQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipePropertyQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Query.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional Query inner = 1;
 * @return {?proto.indradb.Query}
 */
proto.indradb.PipePropertyQuery.prototype.getInner = function() {
  return /** @type{?proto.indradb.Query} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Query, 1));
};


/**
 * @param {?proto.indradb.Query|undefined} value
 * @return {!proto.indradb.PipePropertyQuery} returns this
*/
proto.indradb.PipePropertyQuery.prototype.setInner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipePropertyQuery} returns this
 */
proto.indradb.PipePropertyQuery.prototype.clearInner = function() {
  return this.setInner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipePropertyQuery.prototype.hasInner = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier name = 2;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.PipePropertyQuery.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 2));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.PipePropertyQuery} returns this
*/
proto.indradb.PipePropertyQuery.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipePropertyQuery} returns this
 */
proto.indradb.PipePropertyQuery.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipePropertyQuery.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.PipeWithPropertyPresenceQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.PipeWithPropertyPresenceQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipeWithPropertyPresenceQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: (f = msg.getInner()) && proto.indradb.Query.toObject(includeInstance, f),
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    exists: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.PipeWithPropertyPresenceQuery}
 */
proto.indradb.PipeWithPropertyPresenceQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.PipeWithPropertyPresenceQuery;
  return proto.indradb.PipeWithPropertyPresenceQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.PipeWithPropertyPresenceQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.PipeWithPropertyPresenceQuery}
 */
proto.indradb.PipeWithPropertyPresenceQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Query;
      reader.readMessage(value,proto.indradb.Query.deserializeBinaryFromReader);
      msg.setInner(value);
      break;
    case 2:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.PipeWithPropertyPresenceQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.PipeWithPropertyPresenceQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipeWithPropertyPresenceQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Query.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getExists();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional Query inner = 1;
 * @return {?proto.indradb.Query}
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.getInner = function() {
  return /** @type{?proto.indradb.Query} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Query, 1));
};


/**
 * @param {?proto.indradb.Query|undefined} value
 * @return {!proto.indradb.PipeWithPropertyPresenceQuery} returns this
*/
proto.indradb.PipeWithPropertyPresenceQuery.prototype.setInner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipeWithPropertyPresenceQuery} returns this
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.clearInner = function() {
  return this.setInner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.hasInner = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier name = 2;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 2));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.PipeWithPropertyPresenceQuery} returns this
*/
proto.indradb.PipeWithPropertyPresenceQuery.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipeWithPropertyPresenceQuery} returns this
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool exists = 3;
 * @return {boolean}
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.getExists = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.indradb.PipeWithPropertyPresenceQuery} returns this
 */
proto.indradb.PipeWithPropertyPresenceQuery.prototype.setExists = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.PipeWithPropertyValueQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.PipeWithPropertyValueQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipeWithPropertyValueQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: (f = msg.getInner()) && proto.indradb.Query.toObject(includeInstance, f),
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f),
    equal: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.PipeWithPropertyValueQuery}
 */
proto.indradb.PipeWithPropertyValueQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.PipeWithPropertyValueQuery;
  return proto.indradb.PipeWithPropertyValueQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.PipeWithPropertyValueQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.PipeWithPropertyValueQuery}
 */
proto.indradb.PipeWithPropertyValueQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Query;
      reader.readMessage(value,proto.indradb.Query.deserializeBinaryFromReader);
      msg.setInner(value);
      break;
    case 2:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEqual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.PipeWithPropertyValueQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.PipeWithPropertyValueQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.PipeWithPropertyValueQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Query.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
  f = message.getEqual();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional Query inner = 1;
 * @return {?proto.indradb.Query}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.getInner = function() {
  return /** @type{?proto.indradb.Query} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Query, 1));
};


/**
 * @param {?proto.indradb.Query|undefined} value
 * @return {!proto.indradb.PipeWithPropertyValueQuery} returns this
*/
proto.indradb.PipeWithPropertyValueQuery.prototype.setInner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipeWithPropertyValueQuery} returns this
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.clearInner = function() {
  return this.setInner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.hasInner = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier name = 2;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 2));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.PipeWithPropertyValueQuery} returns this
*/
proto.indradb.PipeWithPropertyValueQuery.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipeWithPropertyValueQuery} returns this
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Json value = 3;
 * @return {?proto.indradb.Json}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 3));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.PipeWithPropertyValueQuery} returns this
*/
proto.indradb.PipeWithPropertyValueQuery.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.PipeWithPropertyValueQuery} returns this
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool equal = 4;
 * @return {boolean}
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.getEqual = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.indradb.PipeWithPropertyValueQuery} returns this
 */
proto.indradb.PipeWithPropertyValueQuery.prototype.setEqual = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.IncludeQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.IncludeQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.IncludeQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.IncludeQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: (f = msg.getInner()) && proto.indradb.Query.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.IncludeQuery}
 */
proto.indradb.IncludeQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.IncludeQuery;
  return proto.indradb.IncludeQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.IncludeQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.IncludeQuery}
 */
proto.indradb.IncludeQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Query;
      reader.readMessage(value,proto.indradb.Query.deserializeBinaryFromReader);
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.IncludeQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.IncludeQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.IncludeQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.IncludeQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Query.serializeBinaryToWriter
    );
  }
};


/**
 * optional Query inner = 1;
 * @return {?proto.indradb.Query}
 */
proto.indradb.IncludeQuery.prototype.getInner = function() {
  return /** @type{?proto.indradb.Query} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Query, 1));
};


/**
 * @param {?proto.indradb.Query|undefined} value
 * @return {!proto.indradb.IncludeQuery} returns this
*/
proto.indradb.IncludeQuery.prototype.setInner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.IncludeQuery} returns this
 */
proto.indradb.IncludeQuery.prototype.clearInner = function() {
  return this.setInner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.IncludeQuery.prototype.hasInner = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.CountQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.CountQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.CountQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.CountQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: (f = msg.getInner()) && proto.indradb.Query.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.CountQuery}
 */
proto.indradb.CountQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.CountQuery;
  return proto.indradb.CountQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.CountQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.CountQuery}
 */
proto.indradb.CountQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Query;
      reader.readMessage(value,proto.indradb.Query.deserializeBinaryFromReader);
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.CountQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.CountQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.CountQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.CountQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Query.serializeBinaryToWriter
    );
  }
};


/**
 * optional Query inner = 1;
 * @return {?proto.indradb.Query}
 */
proto.indradb.CountQuery.prototype.getInner = function() {
  return /** @type{?proto.indradb.Query} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Query, 1));
};


/**
 * @param {?proto.indradb.Query|undefined} value
 * @return {!proto.indradb.CountQuery} returns this
*/
proto.indradb.CountQuery.prototype.setInner = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.CountQuery} returns this
 */
proto.indradb.CountQuery.prototype.clearInner = function() {
  return this.setInner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.CountQuery.prototype.hasInner = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.indradb.QueryOutputValue.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.indradb.QueryOutputValue.ValueCase = {
  VALUE_NOT_SET: 0,
  VERTICES: 1,
  EDGES: 2,
  COUNT: 3,
  VERTEX_PROPERTIES: 4,
  EDGE_PROPERTIES: 5
};

/**
 * @return {proto.indradb.QueryOutputValue.ValueCase}
 */
proto.indradb.QueryOutputValue.prototype.getValueCase = function() {
  return /** @type {proto.indradb.QueryOutputValue.ValueCase} */(jspb.Message.computeOneofCase(this, proto.indradb.QueryOutputValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.QueryOutputValue.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.QueryOutputValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.QueryOutputValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertices: (f = msg.getVertices()) && proto.indradb.QueryOutputVertices.toObject(includeInstance, f),
    edges: (f = msg.getEdges()) && proto.indradb.QueryOutputEdges.toObject(includeInstance, f),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    vertexProperties: (f = msg.getVertexProperties()) && proto.indradb.QueryOutputVertexProperties.toObject(includeInstance, f),
    edgeProperties: (f = msg.getEdgeProperties()) && proto.indradb.QueryOutputEdgeProperties.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.QueryOutputValue}
 */
proto.indradb.QueryOutputValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.QueryOutputValue;
  return proto.indradb.QueryOutputValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.QueryOutputValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.QueryOutputValue}
 */
proto.indradb.QueryOutputValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.QueryOutputVertices;
      reader.readMessage(value,proto.indradb.QueryOutputVertices.deserializeBinaryFromReader);
      msg.setVertices(value);
      break;
    case 2:
      var value = new proto.indradb.QueryOutputEdges;
      reader.readMessage(value,proto.indradb.QueryOutputEdges.deserializeBinaryFromReader);
      msg.setEdges(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCount(value);
      break;
    case 4:
      var value = new proto.indradb.QueryOutputVertexProperties;
      reader.readMessage(value,proto.indradb.QueryOutputVertexProperties.deserializeBinaryFromReader);
      msg.setVertexProperties(value);
      break;
    case 5:
      var value = new proto.indradb.QueryOutputEdgeProperties;
      reader.readMessage(value,proto.indradb.QueryOutputEdgeProperties.deserializeBinaryFromReader);
      msg.setEdgeProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.QueryOutputValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.QueryOutputValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.QueryOutputValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertices();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.QueryOutputVertices.serializeBinaryToWriter
    );
  }
  f = message.getEdges();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.QueryOutputEdges.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getVertexProperties();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.indradb.QueryOutputVertexProperties.serializeBinaryToWriter
    );
  }
  f = message.getEdgeProperties();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.indradb.QueryOutputEdgeProperties.serializeBinaryToWriter
    );
  }
};


/**
 * optional QueryOutputVertices vertices = 1;
 * @return {?proto.indradb.QueryOutputVertices}
 */
proto.indradb.QueryOutputValue.prototype.getVertices = function() {
  return /** @type{?proto.indradb.QueryOutputVertices} */ (
    jspb.Message.getWrapperField(this, proto.indradb.QueryOutputVertices, 1));
};


/**
 * @param {?proto.indradb.QueryOutputVertices|undefined} value
 * @return {!proto.indradb.QueryOutputValue} returns this
*/
proto.indradb.QueryOutputValue.prototype.setVertices = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.indradb.QueryOutputValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.QueryOutputValue} returns this
 */
proto.indradb.QueryOutputValue.prototype.clearVertices = function() {
  return this.setVertices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.QueryOutputValue.prototype.hasVertices = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QueryOutputEdges edges = 2;
 * @return {?proto.indradb.QueryOutputEdges}
 */
proto.indradb.QueryOutputValue.prototype.getEdges = function() {
  return /** @type{?proto.indradb.QueryOutputEdges} */ (
    jspb.Message.getWrapperField(this, proto.indradb.QueryOutputEdges, 2));
};


/**
 * @param {?proto.indradb.QueryOutputEdges|undefined} value
 * @return {!proto.indradb.QueryOutputValue} returns this
*/
proto.indradb.QueryOutputValue.prototype.setEdges = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.indradb.QueryOutputValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.QueryOutputValue} returns this
 */
proto.indradb.QueryOutputValue.prototype.clearEdges = function() {
  return this.setEdges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.QueryOutputValue.prototype.hasEdges = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 count = 3;
 * @return {number}
 */
proto.indradb.QueryOutputValue.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.indradb.QueryOutputValue} returns this
 */
proto.indradb.QueryOutputValue.prototype.setCount = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.indradb.QueryOutputValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.indradb.QueryOutputValue} returns this
 */
proto.indradb.QueryOutputValue.prototype.clearCount = function() {
  return jspb.Message.setOneofField(this, 3, proto.indradb.QueryOutputValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.QueryOutputValue.prototype.hasCount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional QueryOutputVertexProperties vertex_properties = 4;
 * @return {?proto.indradb.QueryOutputVertexProperties}
 */
proto.indradb.QueryOutputValue.prototype.getVertexProperties = function() {
  return /** @type{?proto.indradb.QueryOutputVertexProperties} */ (
    jspb.Message.getWrapperField(this, proto.indradb.QueryOutputVertexProperties, 4));
};


/**
 * @param {?proto.indradb.QueryOutputVertexProperties|undefined} value
 * @return {!proto.indradb.QueryOutputValue} returns this
*/
proto.indradb.QueryOutputValue.prototype.setVertexProperties = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.indradb.QueryOutputValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.QueryOutputValue} returns this
 */
proto.indradb.QueryOutputValue.prototype.clearVertexProperties = function() {
  return this.setVertexProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.QueryOutputValue.prototype.hasVertexProperties = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional QueryOutputEdgeProperties edge_properties = 5;
 * @return {?proto.indradb.QueryOutputEdgeProperties}
 */
proto.indradb.QueryOutputValue.prototype.getEdgeProperties = function() {
  return /** @type{?proto.indradb.QueryOutputEdgeProperties} */ (
    jspb.Message.getWrapperField(this, proto.indradb.QueryOutputEdgeProperties, 5));
};


/**
 * @param {?proto.indradb.QueryOutputEdgeProperties|undefined} value
 * @return {!proto.indradb.QueryOutputValue} returns this
*/
proto.indradb.QueryOutputValue.prototype.setEdgeProperties = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.indradb.QueryOutputValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.QueryOutputValue} returns this
 */
proto.indradb.QueryOutputValue.prototype.clearEdgeProperties = function() {
  return this.setEdgeProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.QueryOutputValue.prototype.hasEdgeProperties = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.QueryOutputVertices.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.QueryOutputVertices.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.QueryOutputVertices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.QueryOutputVertices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputVertices.toObject = function(includeInstance, msg) {
  var f, obj = {
    verticesList: jspb.Message.toObjectList(msg.getVerticesList(),
    proto.indradb.Vertex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.QueryOutputVertices}
 */
proto.indradb.QueryOutputVertices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.QueryOutputVertices;
  return proto.indradb.QueryOutputVertices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.QueryOutputVertices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.QueryOutputVertices}
 */
proto.indradb.QueryOutputVertices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Vertex;
      reader.readMessage(value,proto.indradb.Vertex.deserializeBinaryFromReader);
      msg.addVertices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.QueryOutputVertices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.QueryOutputVertices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.QueryOutputVertices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputVertices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerticesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.indradb.Vertex.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vertex vertices = 1;
 * @return {!Array<!proto.indradb.Vertex>}
 */
proto.indradb.QueryOutputVertices.prototype.getVerticesList = function() {
  return /** @type{!Array<!proto.indradb.Vertex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.Vertex, 1));
};


/**
 * @param {!Array<!proto.indradb.Vertex>} value
 * @return {!proto.indradb.QueryOutputVertices} returns this
*/
proto.indradb.QueryOutputVertices.prototype.setVerticesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.indradb.Vertex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.Vertex}
 */
proto.indradb.QueryOutputVertices.prototype.addVertices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.indradb.Vertex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.QueryOutputVertices} returns this
 */
proto.indradb.QueryOutputVertices.prototype.clearVerticesList = function() {
  return this.setVerticesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.QueryOutputEdges.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.QueryOutputEdges.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.QueryOutputEdges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.QueryOutputEdges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputEdges.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.indradb.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.QueryOutputEdges}
 */
proto.indradb.QueryOutputEdges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.QueryOutputEdges;
  return proto.indradb.QueryOutputEdges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.QueryOutputEdges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.QueryOutputEdges}
 */
proto.indradb.QueryOutputEdges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Edge;
      reader.readMessage(value,proto.indradb.Edge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.QueryOutputEdges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.QueryOutputEdges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.QueryOutputEdges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputEdges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.indradb.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edge edges = 1;
 * @return {!Array<!proto.indradb.Edge>}
 */
proto.indradb.QueryOutputEdges.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.indradb.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.Edge, 1));
};


/**
 * @param {!Array<!proto.indradb.Edge>} value
 * @return {!proto.indradb.QueryOutputEdges} returns this
*/
proto.indradb.QueryOutputEdges.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.indradb.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.Edge}
 */
proto.indradb.QueryOutputEdges.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.indradb.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.QueryOutputEdges} returns this
 */
proto.indradb.QueryOutputEdges.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.QueryOutputVertexProperties.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.QueryOutputVertexProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.QueryOutputVertexProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.QueryOutputVertexProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputVertexProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertexPropertiesList: jspb.Message.toObjectList(msg.getVertexPropertiesList(),
    proto.indradb.VertexProperties.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.QueryOutputVertexProperties}
 */
proto.indradb.QueryOutputVertexProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.QueryOutputVertexProperties;
  return proto.indradb.QueryOutputVertexProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.QueryOutputVertexProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.QueryOutputVertexProperties}
 */
proto.indradb.QueryOutputVertexProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.VertexProperties;
      reader.readMessage(value,proto.indradb.VertexProperties.deserializeBinaryFromReader);
      msg.addVertexProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.QueryOutputVertexProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.QueryOutputVertexProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.QueryOutputVertexProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputVertexProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertexPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.indradb.VertexProperties.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VertexProperties vertex_properties = 1;
 * @return {!Array<!proto.indradb.VertexProperties>}
 */
proto.indradb.QueryOutputVertexProperties.prototype.getVertexPropertiesList = function() {
  return /** @type{!Array<!proto.indradb.VertexProperties>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.VertexProperties, 1));
};


/**
 * @param {!Array<!proto.indradb.VertexProperties>} value
 * @return {!proto.indradb.QueryOutputVertexProperties} returns this
*/
proto.indradb.QueryOutputVertexProperties.prototype.setVertexPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.indradb.VertexProperties=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.VertexProperties}
 */
proto.indradb.QueryOutputVertexProperties.prototype.addVertexProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.indradb.VertexProperties, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.QueryOutputVertexProperties} returns this
 */
proto.indradb.QueryOutputVertexProperties.prototype.clearVertexPropertiesList = function() {
  return this.setVertexPropertiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.QueryOutputEdgeProperties.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.QueryOutputEdgeProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.QueryOutputEdgeProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.QueryOutputEdgeProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputEdgeProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgePropertiesList: jspb.Message.toObjectList(msg.getEdgePropertiesList(),
    proto.indradb.EdgeProperties.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.QueryOutputEdgeProperties}
 */
proto.indradb.QueryOutputEdgeProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.QueryOutputEdgeProperties;
  return proto.indradb.QueryOutputEdgeProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.QueryOutputEdgeProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.QueryOutputEdgeProperties}
 */
proto.indradb.QueryOutputEdgeProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.EdgeProperties;
      reader.readMessage(value,proto.indradb.EdgeProperties.deserializeBinaryFromReader);
      msg.addEdgeProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.QueryOutputEdgeProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.QueryOutputEdgeProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.QueryOutputEdgeProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.QueryOutputEdgeProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgePropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.indradb.EdgeProperties.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EdgeProperties edge_properties = 1;
 * @return {!Array<!proto.indradb.EdgeProperties>}
 */
proto.indradb.QueryOutputEdgeProperties.prototype.getEdgePropertiesList = function() {
  return /** @type{!Array<!proto.indradb.EdgeProperties>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.EdgeProperties, 1));
};


/**
 * @param {!Array<!proto.indradb.EdgeProperties>} value
 * @return {!proto.indradb.QueryOutputEdgeProperties} returns this
*/
proto.indradb.QueryOutputEdgeProperties.prototype.setEdgePropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.indradb.EdgeProperties=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.EdgeProperties}
 */
proto.indradb.QueryOutputEdgeProperties.prototype.addEdgeProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.indradb.EdgeProperties, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.QueryOutputEdgeProperties} returns this
 */
proto.indradb.QueryOutputEdgeProperties.prototype.clearEdgePropertiesList = function() {
  return this.setEdgePropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.NamedProperty.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.NamedProperty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.NamedProperty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.NamedProperty.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.NamedProperty}
 */
proto.indradb.NamedProperty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.NamedProperty;
  return proto.indradb.NamedProperty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.NamedProperty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.NamedProperty}
 */
proto.indradb.NamedProperty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.NamedProperty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.NamedProperty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.NamedProperty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.NamedProperty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier name = 3;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.NamedProperty.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 3));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.NamedProperty} returns this
*/
proto.indradb.NamedProperty.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.NamedProperty} returns this
 */
proto.indradb.NamedProperty.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.NamedProperty.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Json value = 2;
 * @return {?proto.indradb.Json}
 */
proto.indradb.NamedProperty.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 2));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.NamedProperty} returns this
*/
proto.indradb.NamedProperty.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.NamedProperty} returns this
 */
proto.indradb.NamedProperty.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.NamedProperty.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.VertexProperty.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.VertexProperty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.VertexProperty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexProperty.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.indradb.Uuid.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.VertexProperty}
 */
proto.indradb.VertexProperty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.VertexProperty;
  return proto.indradb.VertexProperty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.VertexProperty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.VertexProperty}
 */
proto.indradb.VertexProperty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Uuid;
      reader.readMessage(value,proto.indradb.Uuid.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.VertexProperty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.VertexProperty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.VertexProperty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexProperty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Uuid id = 1;
 * @return {?proto.indradb.Uuid}
 */
proto.indradb.VertexProperty.prototype.getId = function() {
  return /** @type{?proto.indradb.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Uuid, 1));
};


/**
 * @param {?proto.indradb.Uuid|undefined} value
 * @return {!proto.indradb.VertexProperty} returns this
*/
proto.indradb.VertexProperty.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexProperty} returns this
 */
proto.indradb.VertexProperty.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexProperty.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Json value = 2;
 * @return {?proto.indradb.Json}
 */
proto.indradb.VertexProperty.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 2));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.VertexProperty} returns this
*/
proto.indradb.VertexProperty.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexProperty} returns this
 */
proto.indradb.VertexProperty.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexProperty.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.VertexProperties.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.VertexProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.VertexProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.VertexProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertex: (f = msg.getVertex()) && proto.indradb.Vertex.toObject(includeInstance, f),
    propsList: jspb.Message.toObjectList(msg.getPropsList(),
    proto.indradb.NamedProperty.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.VertexProperties}
 */
proto.indradb.VertexProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.VertexProperties;
  return proto.indradb.VertexProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.VertexProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.VertexProperties}
 */
proto.indradb.VertexProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Vertex;
      reader.readMessage(value,proto.indradb.Vertex.deserializeBinaryFromReader);
      msg.setVertex(value);
      break;
    case 2:
      var value = new proto.indradb.NamedProperty;
      reader.readMessage(value,proto.indradb.NamedProperty.deserializeBinaryFromReader);
      msg.addProps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.VertexProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.VertexProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.VertexProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertex();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Vertex.serializeBinaryToWriter
    );
  }
  f = message.getPropsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.indradb.NamedProperty.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vertex vertex = 1;
 * @return {?proto.indradb.Vertex}
 */
proto.indradb.VertexProperties.prototype.getVertex = function() {
  return /** @type{?proto.indradb.Vertex} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Vertex, 1));
};


/**
 * @param {?proto.indradb.Vertex|undefined} value
 * @return {!proto.indradb.VertexProperties} returns this
*/
proto.indradb.VertexProperties.prototype.setVertex = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexProperties} returns this
 */
proto.indradb.VertexProperties.prototype.clearVertex = function() {
  return this.setVertex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexProperties.prototype.hasVertex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated NamedProperty props = 2;
 * @return {!Array<!proto.indradb.NamedProperty>}
 */
proto.indradb.VertexProperties.prototype.getPropsList = function() {
  return /** @type{!Array<!proto.indradb.NamedProperty>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.NamedProperty, 2));
};


/**
 * @param {!Array<!proto.indradb.NamedProperty>} value
 * @return {!proto.indradb.VertexProperties} returns this
*/
proto.indradb.VertexProperties.prototype.setPropsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.indradb.NamedProperty=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.NamedProperty}
 */
proto.indradb.VertexProperties.prototype.addProps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.indradb.NamedProperty, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.VertexProperties} returns this
 */
proto.indradb.VertexProperties.prototype.clearPropsList = function() {
  return this.setPropsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.EdgeProperty.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.EdgeProperty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.EdgeProperty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeProperty.toObject = function(includeInstance, msg) {
  var f, obj = {
    edge: (f = msg.getEdge()) && proto.indradb.Edge.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.EdgeProperty}
 */
proto.indradb.EdgeProperty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.EdgeProperty;
  return proto.indradb.EdgeProperty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.EdgeProperty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.EdgeProperty}
 */
proto.indradb.EdgeProperty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Edge;
      reader.readMessage(value,proto.indradb.Edge.deserializeBinaryFromReader);
      msg.setEdge(value);
      break;
    case 2:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.EdgeProperty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.EdgeProperty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.EdgeProperty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeProperty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdge();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Edge.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Edge edge = 1;
 * @return {?proto.indradb.Edge}
 */
proto.indradb.EdgeProperty.prototype.getEdge = function() {
  return /** @type{?proto.indradb.Edge} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Edge, 1));
};


/**
 * @param {?proto.indradb.Edge|undefined} value
 * @return {!proto.indradb.EdgeProperty} returns this
*/
proto.indradb.EdgeProperty.prototype.setEdge = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgeProperty} returns this
 */
proto.indradb.EdgeProperty.prototype.clearEdge = function() {
  return this.setEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgeProperty.prototype.hasEdge = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Json value = 2;
 * @return {?proto.indradb.Json}
 */
proto.indradb.EdgeProperty.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 2));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.EdgeProperty} returns this
*/
proto.indradb.EdgeProperty.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgeProperty} returns this
 */
proto.indradb.EdgeProperty.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgeProperty.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.indradb.EdgeProperties.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.EdgeProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.EdgeProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.EdgeProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    edge: (f = msg.getEdge()) && proto.indradb.Edge.toObject(includeInstance, f),
    propsList: jspb.Message.toObjectList(msg.getPropsList(),
    proto.indradb.NamedProperty.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.EdgeProperties}
 */
proto.indradb.EdgeProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.EdgeProperties;
  return proto.indradb.EdgeProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.EdgeProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.EdgeProperties}
 */
proto.indradb.EdgeProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Edge;
      reader.readMessage(value,proto.indradb.Edge.deserializeBinaryFromReader);
      msg.setEdge(value);
      break;
    case 2:
      var value = new proto.indradb.NamedProperty;
      reader.readMessage(value,proto.indradb.NamedProperty.deserializeBinaryFromReader);
      msg.addProps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.EdgeProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.EdgeProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.EdgeProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgeProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdge();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Edge.serializeBinaryToWriter
    );
  }
  f = message.getPropsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.indradb.NamedProperty.serializeBinaryToWriter
    );
  }
};


/**
 * optional Edge edge = 1;
 * @return {?proto.indradb.Edge}
 */
proto.indradb.EdgeProperties.prototype.getEdge = function() {
  return /** @type{?proto.indradb.Edge} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Edge, 1));
};


/**
 * @param {?proto.indradb.Edge|undefined} value
 * @return {!proto.indradb.EdgeProperties} returns this
*/
proto.indradb.EdgeProperties.prototype.setEdge = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgeProperties} returns this
 */
proto.indradb.EdgeProperties.prototype.clearEdge = function() {
  return this.setEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgeProperties.prototype.hasEdge = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated NamedProperty props = 2;
 * @return {!Array<!proto.indradb.NamedProperty>}
 */
proto.indradb.EdgeProperties.prototype.getPropsList = function() {
  return /** @type{!Array<!proto.indradb.NamedProperty>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.indradb.NamedProperty, 2));
};


/**
 * @param {!Array<!proto.indradb.NamedProperty>} value
 * @return {!proto.indradb.EdgeProperties} returns this
*/
proto.indradb.EdgeProperties.prototype.setPropsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.indradb.NamedProperty=} opt_value
 * @param {number=} opt_index
 * @return {!proto.indradb.NamedProperty}
 */
proto.indradb.EdgeProperties.prototype.addProps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.indradb.NamedProperty, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.indradb.EdgeProperties} returns this
 */
proto.indradb.EdgeProperties.prototype.clearPropsList = function() {
  return this.setPropsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.indradb.BulkInsertItem.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.indradb.BulkInsertItem.ItemCase = {
  ITEM_NOT_SET: 0,
  VERTEX: 1,
  EDGE: 2,
  VERTEX_PROPERTY: 3,
  EDGE_PROPERTY: 4
};

/**
 * @return {proto.indradb.BulkInsertItem.ItemCase}
 */
proto.indradb.BulkInsertItem.prototype.getItemCase = function() {
  return /** @type {proto.indradb.BulkInsertItem.ItemCase} */(jspb.Message.computeOneofCase(this, proto.indradb.BulkInsertItem.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.BulkInsertItem.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.BulkInsertItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.BulkInsertItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.BulkInsertItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertex: (f = msg.getVertex()) && proto.indradb.Vertex.toObject(includeInstance, f),
    edge: (f = msg.getEdge()) && proto.indradb.Edge.toObject(includeInstance, f),
    vertexProperty: (f = msg.getVertexProperty()) && proto.indradb.VertexPropertyBulkInsertItem.toObject(includeInstance, f),
    edgeProperty: (f = msg.getEdgeProperty()) && proto.indradb.EdgePropertyBulkInsertItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.BulkInsertItem}
 */
proto.indradb.BulkInsertItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.BulkInsertItem;
  return proto.indradb.BulkInsertItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.BulkInsertItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.BulkInsertItem}
 */
proto.indradb.BulkInsertItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Vertex;
      reader.readMessage(value,proto.indradb.Vertex.deserializeBinaryFromReader);
      msg.setVertex(value);
      break;
    case 2:
      var value = new proto.indradb.Edge;
      reader.readMessage(value,proto.indradb.Edge.deserializeBinaryFromReader);
      msg.setEdge(value);
      break;
    case 3:
      var value = new proto.indradb.VertexPropertyBulkInsertItem;
      reader.readMessage(value,proto.indradb.VertexPropertyBulkInsertItem.deserializeBinaryFromReader);
      msg.setVertexProperty(value);
      break;
    case 4:
      var value = new proto.indradb.EdgePropertyBulkInsertItem;
      reader.readMessage(value,proto.indradb.EdgePropertyBulkInsertItem.deserializeBinaryFromReader);
      msg.setEdgeProperty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.BulkInsertItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.BulkInsertItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.BulkInsertItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.BulkInsertItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertex();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Vertex.serializeBinaryToWriter
    );
  }
  f = message.getEdge();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Edge.serializeBinaryToWriter
    );
  }
  f = message.getVertexProperty();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.VertexPropertyBulkInsertItem.serializeBinaryToWriter
    );
  }
  f = message.getEdgeProperty();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.indradb.EdgePropertyBulkInsertItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vertex vertex = 1;
 * @return {?proto.indradb.Vertex}
 */
proto.indradb.BulkInsertItem.prototype.getVertex = function() {
  return /** @type{?proto.indradb.Vertex} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Vertex, 1));
};


/**
 * @param {?proto.indradb.Vertex|undefined} value
 * @return {!proto.indradb.BulkInsertItem} returns this
*/
proto.indradb.BulkInsertItem.prototype.setVertex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.indradb.BulkInsertItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.BulkInsertItem} returns this
 */
proto.indradb.BulkInsertItem.prototype.clearVertex = function() {
  return this.setVertex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.BulkInsertItem.prototype.hasVertex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Edge edge = 2;
 * @return {?proto.indradb.Edge}
 */
proto.indradb.BulkInsertItem.prototype.getEdge = function() {
  return /** @type{?proto.indradb.Edge} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Edge, 2));
};


/**
 * @param {?proto.indradb.Edge|undefined} value
 * @return {!proto.indradb.BulkInsertItem} returns this
*/
proto.indradb.BulkInsertItem.prototype.setEdge = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.indradb.BulkInsertItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.BulkInsertItem} returns this
 */
proto.indradb.BulkInsertItem.prototype.clearEdge = function() {
  return this.setEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.BulkInsertItem.prototype.hasEdge = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VertexPropertyBulkInsertItem vertex_property = 3;
 * @return {?proto.indradb.VertexPropertyBulkInsertItem}
 */
proto.indradb.BulkInsertItem.prototype.getVertexProperty = function() {
  return /** @type{?proto.indradb.VertexPropertyBulkInsertItem} */ (
    jspb.Message.getWrapperField(this, proto.indradb.VertexPropertyBulkInsertItem, 3));
};


/**
 * @param {?proto.indradb.VertexPropertyBulkInsertItem|undefined} value
 * @return {!proto.indradb.BulkInsertItem} returns this
*/
proto.indradb.BulkInsertItem.prototype.setVertexProperty = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.indradb.BulkInsertItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.BulkInsertItem} returns this
 */
proto.indradb.BulkInsertItem.prototype.clearVertexProperty = function() {
  return this.setVertexProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.BulkInsertItem.prototype.hasVertexProperty = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EdgePropertyBulkInsertItem edge_property = 4;
 * @return {?proto.indradb.EdgePropertyBulkInsertItem}
 */
proto.indradb.BulkInsertItem.prototype.getEdgeProperty = function() {
  return /** @type{?proto.indradb.EdgePropertyBulkInsertItem} */ (
    jspb.Message.getWrapperField(this, proto.indradb.EdgePropertyBulkInsertItem, 4));
};


/**
 * @param {?proto.indradb.EdgePropertyBulkInsertItem|undefined} value
 * @return {!proto.indradb.BulkInsertItem} returns this
*/
proto.indradb.BulkInsertItem.prototype.setEdgeProperty = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.indradb.BulkInsertItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.BulkInsertItem} returns this
 */
proto.indradb.BulkInsertItem.prototype.clearEdgeProperty = function() {
  return this.setEdgeProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.BulkInsertItem.prototype.hasEdgeProperty = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.VertexPropertyBulkInsertItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.VertexPropertyBulkInsertItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexPropertyBulkInsertItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.indradb.Uuid.toObject(includeInstance, f),
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.VertexPropertyBulkInsertItem}
 */
proto.indradb.VertexPropertyBulkInsertItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.VertexPropertyBulkInsertItem;
  return proto.indradb.VertexPropertyBulkInsertItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.VertexPropertyBulkInsertItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.VertexPropertyBulkInsertItem}
 */
proto.indradb.VertexPropertyBulkInsertItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Uuid;
      reader.readMessage(value,proto.indradb.Uuid.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 4:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.VertexPropertyBulkInsertItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.VertexPropertyBulkInsertItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.VertexPropertyBulkInsertItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Uuid id = 1;
 * @return {?proto.indradb.Uuid}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.getId = function() {
  return /** @type{?proto.indradb.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Uuid, 1));
};


/**
 * @param {?proto.indradb.Uuid|undefined} value
 * @return {!proto.indradb.VertexPropertyBulkInsertItem} returns this
*/
proto.indradb.VertexPropertyBulkInsertItem.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexPropertyBulkInsertItem} returns this
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier name = 4;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 4));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.VertexPropertyBulkInsertItem} returns this
*/
proto.indradb.VertexPropertyBulkInsertItem.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexPropertyBulkInsertItem} returns this
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.hasName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Json value = 3;
 * @return {?proto.indradb.Json}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 3));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.VertexPropertyBulkInsertItem} returns this
*/
proto.indradb.VertexPropertyBulkInsertItem.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.VertexPropertyBulkInsertItem} returns this
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.VertexPropertyBulkInsertItem.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.EdgePropertyBulkInsertItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.EdgePropertyBulkInsertItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgePropertyBulkInsertItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    edge: (f = msg.getEdge()) && proto.indradb.Edge.toObject(includeInstance, f),
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.EdgePropertyBulkInsertItem}
 */
proto.indradb.EdgePropertyBulkInsertItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.EdgePropertyBulkInsertItem;
  return proto.indradb.EdgePropertyBulkInsertItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.EdgePropertyBulkInsertItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.EdgePropertyBulkInsertItem}
 */
proto.indradb.EdgePropertyBulkInsertItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Edge;
      reader.readMessage(value,proto.indradb.Edge.deserializeBinaryFromReader);
      msg.setEdge(value);
      break;
    case 4:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.EdgePropertyBulkInsertItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.EdgePropertyBulkInsertItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.EdgePropertyBulkInsertItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdge();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Edge.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Edge edge = 1;
 * @return {?proto.indradb.Edge}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.getEdge = function() {
  return /** @type{?proto.indradb.Edge} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Edge, 1));
};


/**
 * @param {?proto.indradb.Edge|undefined} value
 * @return {!proto.indradb.EdgePropertyBulkInsertItem} returns this
*/
proto.indradb.EdgePropertyBulkInsertItem.prototype.setEdge = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgePropertyBulkInsertItem} returns this
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.clearEdge = function() {
  return this.setEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.hasEdge = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier name = 4;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 4));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.EdgePropertyBulkInsertItem} returns this
*/
proto.indradb.EdgePropertyBulkInsertItem.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgePropertyBulkInsertItem} returns this
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.hasName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Json value = 3;
 * @return {?proto.indradb.Json}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 3));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.EdgePropertyBulkInsertItem} returns this
*/
proto.indradb.EdgePropertyBulkInsertItem.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.EdgePropertyBulkInsertItem} returns this
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.EdgePropertyBulkInsertItem.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.IndexPropertyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.IndexPropertyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.IndexPropertyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.IndexPropertyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.IndexPropertyRequest}
 */
proto.indradb.IndexPropertyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.IndexPropertyRequest;
  return proto.indradb.IndexPropertyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.IndexPropertyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.IndexPropertyRequest}
 */
proto.indradb.IndexPropertyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.IndexPropertyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.IndexPropertyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.IndexPropertyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.IndexPropertyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier name = 1;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.IndexPropertyRequest.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 1));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.IndexPropertyRequest} returns this
*/
proto.indradb.IndexPropertyRequest.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.IndexPropertyRequest} returns this
 */
proto.indradb.IndexPropertyRequest.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.IndexPropertyRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.SetPropertiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.SetPropertiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.SetPropertiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.SetPropertiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    q: (f = msg.getQ()) && proto.indradb.Query.toObject(includeInstance, f),
    name: (f = msg.getName()) && proto.indradb.Identifier.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.SetPropertiesRequest}
 */
proto.indradb.SetPropertiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.SetPropertiesRequest;
  return proto.indradb.SetPropertiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.SetPropertiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.SetPropertiesRequest}
 */
proto.indradb.SetPropertiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Query;
      reader.readMessage(value,proto.indradb.Query.deserializeBinaryFromReader);
      msg.setQ(value);
      break;
    case 2:
      var value = new proto.indradb.Identifier;
      reader.readMessage(value,proto.indradb.Identifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.SetPropertiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.SetPropertiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.SetPropertiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.SetPropertiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQ();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Query.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Query q = 1;
 * @return {?proto.indradb.Query}
 */
proto.indradb.SetPropertiesRequest.prototype.getQ = function() {
  return /** @type{?proto.indradb.Query} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Query, 1));
};


/**
 * @param {?proto.indradb.Query|undefined} value
 * @return {!proto.indradb.SetPropertiesRequest} returns this
*/
proto.indradb.SetPropertiesRequest.prototype.setQ = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.SetPropertiesRequest} returns this
 */
proto.indradb.SetPropertiesRequest.prototype.clearQ = function() {
  return this.setQ(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.SetPropertiesRequest.prototype.hasQ = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identifier name = 2;
 * @return {?proto.indradb.Identifier}
 */
proto.indradb.SetPropertiesRequest.prototype.getName = function() {
  return /** @type{?proto.indradb.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Identifier, 2));
};


/**
 * @param {?proto.indradb.Identifier|undefined} value
 * @return {!proto.indradb.SetPropertiesRequest} returns this
*/
proto.indradb.SetPropertiesRequest.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.SetPropertiesRequest} returns this
 */
proto.indradb.SetPropertiesRequest.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.SetPropertiesRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Json value = 3;
 * @return {?proto.indradb.Json}
 */
proto.indradb.SetPropertiesRequest.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 3));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.SetPropertiesRequest} returns this
*/
proto.indradb.SetPropertiesRequest.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.SetPropertiesRequest} returns this
 */
proto.indradb.SetPropertiesRequest.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.SetPropertiesRequest.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    created: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.CreateResponse}
 */
proto.indradb.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.CreateResponse;
  return proto.indradb.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.CreateResponse}
 */
proto.indradb.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool created = 1;
 * @return {boolean}
 */
proto.indradb.CreateResponse.prototype.getCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.indradb.CreateResponse} returns this
 */
proto.indradb.CreateResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.ExecutePluginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.ExecutePluginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.ExecutePluginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.ExecutePluginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    arg: (f = msg.getArg()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.ExecutePluginRequest}
 */
proto.indradb.ExecutePluginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.ExecutePluginRequest;
  return proto.indradb.ExecutePluginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.ExecutePluginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.ExecutePluginRequest}
 */
proto.indradb.ExecutePluginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setArg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.ExecutePluginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.ExecutePluginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.ExecutePluginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.ExecutePluginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getArg();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.indradb.ExecutePluginRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.indradb.ExecutePluginRequest} returns this
 */
proto.indradb.ExecutePluginRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Json arg = 2;
 * @return {?proto.indradb.Json}
 */
proto.indradb.ExecutePluginRequest.prototype.getArg = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 2));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.ExecutePluginRequest} returns this
*/
proto.indradb.ExecutePluginRequest.prototype.setArg = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.ExecutePluginRequest} returns this
 */
proto.indradb.ExecutePluginRequest.prototype.clearArg = function() {
  return this.setArg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.ExecutePluginRequest.prototype.hasArg = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.indradb.ExecutePluginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.indradb.ExecutePluginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.indradb.ExecutePluginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.ExecutePluginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto.indradb.Json.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.indradb.ExecutePluginResponse}
 */
proto.indradb.ExecutePluginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.indradb.ExecutePluginResponse;
  return proto.indradb.ExecutePluginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.indradb.ExecutePluginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.indradb.ExecutePluginResponse}
 */
proto.indradb.ExecutePluginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.indradb.Json;
      reader.readMessage(value,proto.indradb.Json.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.indradb.ExecutePluginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.indradb.ExecutePluginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.indradb.ExecutePluginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.indradb.ExecutePluginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.indradb.Json.serializeBinaryToWriter
    );
  }
};


/**
 * optional Json value = 1;
 * @return {?proto.indradb.Json}
 */
proto.indradb.ExecutePluginResponse.prototype.getValue = function() {
  return /** @type{?proto.indradb.Json} */ (
    jspb.Message.getWrapperField(this, proto.indradb.Json, 1));
};


/**
 * @param {?proto.indradb.Json|undefined} value
 * @return {!proto.indradb.ExecutePluginResponse} returns this
*/
proto.indradb.ExecutePluginResponse.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.indradb.ExecutePluginResponse} returns this
 */
proto.indradb.ExecutePluginResponse.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.indradb.ExecutePluginResponse.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.indradb.EdgeDirection = {
  OUTBOUND: 0,
  INBOUND: 1
};

goog.object.extend(exports, proto.indradb);
